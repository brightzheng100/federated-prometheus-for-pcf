resource_types:
- name: bosh-deploy
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: federated-prometheus-for-pcf
  type: git
  source:
    uri: https://github.com/brightzheng100/federated-prometheus-for-pcf.git
    branch: master
- name: prometheus-release-git
  type: git
  source:
    uri: https://github.com/bosh-prometheus/prometheus-boshrelease.git
    branch: master
    tag_filter: "v22.0.*"
- name: prometheus-release-blob
  type: github-release
  source:
    user: bosh-prometheus
    repository: prometheus-boshrelease
    access_token: ((github_token))
- name: bosh-deployment
  type: bosh-deploy
  source:
    deployment: prometheus
    target: ((deploy_bosh_target))
    client: ((deploy_bosh_admin))
    client_secret: ((deploy_bosh_admin_secret))
    ca_cert: ((deploy_bosh_ca_cert))

jobs:
- name: deploy
  plan:
  - get: federated-prometheus-for-pcf
    passed: [install-node-exporter]
  - get: prometheus-release-git
  - get: prometheus-release-blob
    version: { tag: 'v22.0.2' }
  - get: pcf-bosh-creds
    params:
      deployment: prometheus
  - task: retrieve-params-from-opsman
    file: federated-prometheus-for-pcf/pipeline-agent/tasks/retrieve-params-from-opsman.yml
    params:
      pcf_opsman_admin_username: ((pcf_opsman_admin_username))
      pcf_opsman_admin_password: ((pcf_opsman_admin_password))
      opsman_url: ((opsman_url))
  - put: bosh-deployment
    params:
      manifest: prometheus-release-git/manifests/prometheus.yml
      releases:
      - prometheus-release-blob/prometheus-*.tgz
      ops_files:
      - federated-prometheus-for-pcf/ops-files/prometheus_master_job.yml
      vars:
        azs: ((deploy_azs))
        network: ((deploy_network))
        vm_type: ((deploy_vm_type))
        vm_type_prometheus: ((deploy_vm_type_prometheus))
        vm_type_alertmanager: ((deploy_vm_type_alertmanager))
        vm_type_database: ((deploy_vm_type_database))
        vm_type_grafana: ((deploy_vm_type_grafana))
        vm_type_nginx: ((deploy_vm_type_nginx))
        persistent_disk_prometheus: ((deploy_persistent_disk_prometheus))
        persistent_disk_database: ((deploy_persistent_disk_database))
        skip_ssl_verify: ((skip_ssl_verify))

- name: destroy
  plan:
  - get: federated-prometheus-for-pcf
  - get: pcf-bosh-creds
  - task: delete-deployment
    file: federated-prometheus-for-pcf/pipeline-agent/tasks/delete-prometheus.yml
    params:
      deployment: prometheus
      opsman_url: ((opsman_url))
      pcf_opsman_admin_username: ((pcf_opsman_admin_username))
      pcf_opsman_admin_password: ((pcf_opsman_admin_password))
      director_to_monitor: ((director_to_monitor))
